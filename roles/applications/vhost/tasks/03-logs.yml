---
- name: create log directory
  file:
    state: directory
    path:  "{{ log_path }}"
    owner: "{{ user }}"
    group: applications
    mode: "u=rwX,g=rwX,o=rX"

- name: create log directories
  file:
    state: directory
    path:  "{{ item.value }}"
    owner: "{{ user }}"
    group: applications
    mode: "u=rwX,g=rwX,o=rwX"
  with_dict: "{{ log_paths }}"

- name: setup log rotation
  template:
    src: logrotate.conf.j2
    dest: "/etc/logrotate.d/{{ fragments.name }}"
    owner: root
    group: root
    mode: 0644

- name: monitor log rotation
  include_role:
    name: monit-service
  vars:
    monit_service:
      name: "{{ fragments.name }}"
      template: vhost.j2

- name: compile log paths from other services
  set_fact:
    system_logs:
      application:  "{{ log_paths.app }}"
      nginx:        /var/log/nginx
      mysql:        /var/log/mysql
      redis:        /var/log/redis
    php_logs: {}
    ruby_logs: {}

- name: compile log paths from other services
  set_fact:
    php_logs:
      php-fpm-pool: "/var/log/php/{{ vhost.upstream.name if 'upstream' in vhost else 'www' }}"
  when: vhost.type.startswith("php")

- name: compile log paths from other services
  set_fact:
    ruby_logs:
      passenger: "/var/log/passenger"
  when: vhost.type.startswith("ruby")

- name: compile log paths from other services
  set_fact:
    logs: "{{ system_logs | combine(php_logs) | combine(ruby_logs) }}"

- name: bind logs from other services
  mount:
    src: "{{ item.value }}"
    path: "{{ log_path }}{{ item.key }}"
    fstype: fuse.bindfs
    opts: "force-user={{ user }},force-group=applications,perms=0440:+X"
    state: mounted
  with_dict: "{{ logs }}"
