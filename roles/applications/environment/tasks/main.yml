---
- block:
  - name: extract application environment configuration
    ansible.builtin.set_fact:
      environment_config: "{{ application_config | json_query(environment_query) | first }}"
    vars:
      environment_query: "environments[?name=='{{ application_environment }}']"

  - name: extract application servers
    ansible.builtin.set_fact:
      app_servers: "{{ environment_config.servers }}"

  - name: extract database servers
    ansible.builtin.set_fact:
      db_servers: "{{ environment_config | json_query(db_servers_query) }}"
    vars:
      db_servers_query: "databases.mariadb[].servers | []"

  - block:
      - name: create owner account
        ansible.builtin.include_role:
          role: user
        vars:
          user: "{{ application_config.owner }}"

      - name: install packages
        ansible.builtin.apt:
          name: "{{ environment_config.packages }}"
          state: present
        when: '"packages" in environment_config and environment_config.packages | length > 0'

      - name: setup stage
        ansible.builtin.include_role:
          role: stage
        vars:
          app_name: "{{ application_config.name }}"
          stage:
            type: "{{ environment_config.vhost.type }}"
            env: "{{ environment_config.name }}"
            domains: "{{ environment_config.vhost.domains }}"
            ssl: "{{ 'ssl' in environment_config.vhost and environment_config.vhost.ssl }}"
            owner: "{{ application_config.owner }}"
            upstream: "{{ environment_config.upstream }}"
            rewrite: "{{ environment_config.vhost.rewrite }}"
            redirections: "{{ environment_config.vhost.redirections }}"

      - name: setup crons
        ansible.builtin.include_role:
          role: cron
        vars:
          owner: "{{ application_config.owner.name }}"
        with_items: "{{ environment_config.crons }}"
        loop_control:
          loop_var: cron

    when: inventory_hostname in app_servers

  - name: setup databases
    ansible.builtin.include_role:
      role: database
    with_items: "{{ environment_config.databases.mariadb }}"
    loop_control:
      loop_var: database
    when: inventory_hostname in db_servers

  when: "application_config | json_query(environment_query)"
  vars:
    environment_query: "environments[?name=='{{ application_environment }}']"
