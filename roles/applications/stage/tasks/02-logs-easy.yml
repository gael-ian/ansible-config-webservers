---
- name: create log directory
  ansible.builtin.file:
    state: directory
    path:  "{{ easy_logs_root }}"
    owner: "{{ user }}"
    group: applications
    mode: "u=rwX,g=rwX,o=rX"

- name: compile log paths from other services
  ansible.builtin.set_fact:
    easy_logs:
      application:  "{{ logs.app }}"
      nginx:        /var/log/nginx
      mysql:        /var/log/mysql
      redis:        /var/log/redis

- block:
  - name: compile log paths for PHP upstream
    ansible.builtin.set_fact:
      php_upstream_logs: "/var/log/php/{{ stage.upstream.name if 'upstream' in stage else 'www' }}"

  - name: combine log paths
    ansible.builtin.set_fact:
      easy_logs: "{{ { 'php': php_upstream_logs } | combine(easy_logs) }}"
  when: stage.type.startswith("php")

- block:
  - name: combine log paths
    ansible.builtin.set_fact:
      easy_logs: "{{ { 'passenger': '/var/log/passenger' } | combine(easy_logs) }}"
  when: stage.type.startswith("ruby")

- name: bind logs from other services
  ansible.posix.mount:
    src: "{{ item.value }}"
    path: "{{ easy_logs_root }}{{ item.key }}"
    fstype: fuse.bindfs
    opts: "force-user={{ user }},force-group=applications,perms=0440:+X"
    state: mounted
  with_dict: "{{ easy_logs }}"
