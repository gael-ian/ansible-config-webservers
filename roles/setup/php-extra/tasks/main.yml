---
- name: ensure unzip is installed
  ansible.builtin.apt:
    name: unzip
    state: present

- name: check Composer installation
  ansible.builtin.stat:
    path: "{{ composer.path }}"
  ignore_errors: True
  register: composer_install_result

- block:
    - name: get Composer installer expected signature
      ansible.builtin.uri:
        url: https://composer.github.io/installer.sig
        return_content: true
      register: composer_expected_signature

    - name: get Composer installer
      ansible.builtin.get_url:
        url: "{{composer.url}}"
        dest: "{{composer.temp_installer_path}}"
        mode: 0644

    - name: get Composer installer signature
      ansible.builtin.shell: |
        php -r "echo hash_file('SHA384', '{{composer.temp_installer_path}}');"
      register: composer_actual_signature

    - block:
        - name: create Composer installation directory
          ansible.builtin.file:
            path: "{{ composer.install_dir }}"
            owner: root
            group: staff
            mode: 0755
            state: directory
            recurse: true

        - name: install Composer
          ansible.builtin.shell: |
            php {{composer.temp_installer_path}} \
                --install-dir {{ composer.install_dir }} \
                --filename {{ composer.filename }} \
                --quiet

        - name: set Composer as executable
          ansible.builtin.file:
            path: "{{ [ composer.install_dir, composer.filename ] | join('/') }}"
            owner: root
            group: staff
            mode: 0755

        - name: link Composer into $PATH
          ansible.builtin.file:
            src: "{{ [ composer.install_dir, composer.filename ] | join('/') }}"
            dest: "{{ composer.path }}"
            state: link
            owner: root
            group: staff
            mode: 0755

      when: composer_expected_signature.content|trim == composer_actual_signature.stdout|trim

    - name: remove Composer installer
      ansible.builtin.file:
        path: "{{composer.temp_installer_path}}"
        state: absent

    - ansible.builtin.fail:
        msg: Composer installer signature does not match the expected one. Aborting installation !
      when: composer_expected_signature.content|trim != composer_actual_signature.stdout|trim

  when: composer_install_result.stat.exists != true

- name: update Composer
  ansible.builtin.shell: "{{ composer.path }} self-update --no-progress --stable"
  when: composer_auto_update and composer_install_result.stat.exists != true
