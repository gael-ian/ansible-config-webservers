---
# Basic setup for every machine
# 
# Use ansible-playbook without extra arguments:
# 
#     ansible-playbook 02.1-setup-system.yml
#
- name: system setup for every machine
  remote_user: administrator
  become: yes
  
  # Configurations will be applied on all servers
  hosts: servers

  # Some vault vars have to be loaded to not let
  # host_vars files loading fail.
  vars_files:
    - vault/administrators.yml

  pre_tasks:
    - name: list SSH hosts keys
      find:
        paths: /etc/ssh
        patterns: 'ssh_host_*_key*'
        file_type: file
      register: ssh_host_keys

  roles:
    # Add repositories to APT sources
    - role: apt-sources

    # Apply all pending updates (except in Virtualbox VMs, as updates
    # can break Guest Additions kernel module)
    - role: uptodate
      when: (ansible_bios_version != 'VirtualBox')

    # Enable automatic security updates
    - role: autoupdate

    # Ensure some basic packages are installed.
    # See `roles/base-packages/defaults/main.yml`
    # for a list of installed packages.
    - role: base-packages


    # Disable SSH root login and password authentication
    - role: ssh

    # Install fail2ban
    - role: firewall


    # Install and globally configure Monit for monitoring
    - role: monit

    # Configure Monit with basic system watches
    - role: monit-service
      monit_service:
        name: system
        template: system.j2

    - role: monit-service
      monit_service:
        name: disk-space
        template: disk-space.j2
        partitions: "{{ ansible_devices | json_query('*.partitions.*.uuid | []') }}"

    - role: monit-service
      monit_service:
        name: cron
        template: cron.j2

    - role: monit-service
      monit_service:
        name: openssh-server
        template: openssh-server.j2
        ssh_keys: "{{ ssh_host_keys.files | json_query('[].path') }}"

    # Install ruby
    - role: ruby
