---
# Initial setup for ansible managment
# 
# On first run, use:
#
#     ansible-playbook 01-make-remotes-administrable.yml \
#       --ask-pass \
#       --extra-vars "host={{servername}} user={{username}}"
# 
# `{{servername}}` have to be resolvable. Use /etc/hosts aliases if needed.
# Account named `{{username}}` must exist on remote.
#
# On servers where `{{username}}` is not a sudoer, use instead:
#
#     ansible-playbook 01.0--make-remotes-administrable.yml \
#       --ask-pass \
#       --ask-become-pass \
#       --extra-vars "host={{servername}},method=su,user={{username}}"
# 
# After this initial setup, configure SSH to use the administrator account and its key.
# 
# On subsequent runs, use ansible-playbook without extra arguments:
# 
#     ansible-playbook 01.0--make-remotes-administrable.yml
# 
- name: initial setup for ansible managment
  remote_user: "{{ user | default('administrator') }}"
  become: true
  become_method: "{{ method | default('sudo') }}"
  
  # Configurations will be applied on all remotes
  # (unless others hosts are specified on command line)
  hosts: "{{ host | default('servers') }}"

  vars_files:
    - vault/administrators.yml
  
  roles:
    # Create an `administrators` user group.
    # Ensure sudo is installed and that the `administrators` group is sudoer
    # Create an `administrator` user account (credentials and authentication
    #   keys are defined per server in `host_vars`)
    - role: administrable

